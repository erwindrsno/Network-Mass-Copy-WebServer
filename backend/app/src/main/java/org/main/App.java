/*
 * This source file was generated by the Gradle 'init' task
 */
package org.main;

import static io.javalin.apibuilder.ApiBuilder.*;

import org.computer.ComputerController;
import org.computer.ComputerModule;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.inject.Guice;
import com.google.inject.Injector;

import io.javalin.Javalin;
import io.javalin.json.JavalinJackson;

public class App {
    private static Logger logger = LoggerFactory.getLogger(App.class);

    public static void main(String[] args) {
        Injector injector = Guice.createInjector(new ComputerModule());

        ComputerController computerController = injector.getInstance(ComputerController.class);

        Javalin app = Javalin.create(config -> {
            config.jsonMapper(new JavalinJackson());
            config.router.apiBuilder(() -> {
                path("/users", () -> {
                    // get(UserController::getAllUsers);
                    // path("/{id}", () -> {
                    // get(UserController::getUserWithId);
                    // });
                });
                path("/computers", () -> {
                    get(computerController::getComputers);
                    post(computerController::insertComputer);
                    path("/lab/{num}", () -> {
                        get(computerController::getComputersByLabNum);
                    });
                    path("/id/{id}", () -> {
                        get(computerController::getComputersById);
                    });
                    path("/ip_addr/{ip}", () -> {
                        get(computerController::getComputersByIpAddress);
                    });
                });
            });

        });

        app.error(404, ctx -> {
            ctx.result("Not found bit*h");
        });

        app.get("/", ctx -> ctx.result("Hello world!!!"));
        app.start(7070);
        logger.info("Server has started!");
    }
}
